group text2bip;



portStdName(int)::=<<sync$int$Port>>

header(name, functions, portTypes)::=<<
model $name$

	port type syncPort
	
	$portTypes:{ 
	port type $it$ }$


connector type SINGLE(syncPort p1)
define p1
end


connector type RDV2(syncPort p1, syncPort p2)
define p1 p2
end	

connector type RDV3(syncPort p1, syncPort p2, syncPort p3)
define p1 p2 p3
end	

connector type RDV4(syncPort p1, syncPort p2, syncPort p3, syncPort p4)
define p1 p2 p3 p4
end	

connector type RDV5(syncPort p1, syncPort p2, syncPort p3, syncPort p4, syncPort p5)
define p1 p2 p3 p4 p5
end	

connector type RDV6(syncPort p1, syncPort p2, syncPort p3, syncPort p4, syncPort p5, syncPort p6)
define p1 p2 p3 p4 p5 p6
end	

connector type RDV7(syncPort p1, syncPort p2, syncPort p3, syncPort p4, syncPort p5, syncPort p6, syncPort p7)
define p1 p2 p3 p4 p5 p6 p7
end	

connector type RDV8(syncPort p1, syncPort p2, syncPort p3, syncPort p4, syncPort p5, syncPort p6, syncPort p7, syncPort p8)
define p1 p2 p3 p4 p5 p6 p7 p8
end	

>>





atom(name, data, places, init, initAct, ports, portNames, exportNames, documentation )::=<<

$if(documentation)$
 /* $documentation$ */ $endif$
 
atomic type $name$

$data:{ 
data int  $it:{ $it$ };separator=","$ }$
$exportNames:{   
	export port $if(it.portType)$ $it.portType$ $else$ syncPort $endif$ $it.name$ $if(it.params)$($params(items=it.params)$)$endif$ }$ 
$portNames:{   
	export port $if(it.portType)$ $it.portType$ $else$ syncPort $endif$ $it.name$ $if(it.params)$($params(items=it.params)$)$endif$ }$ 
	place $places:{ $it$ };separator=","$

initial to $init$ do{ $initAct:{ 
	$it$ }$ }

$ports:{ on $it.name$ from $it.from$ to $it.to$ $if(it.cond)$ provided( $it.cond$ ) $endif$ $if(it.act)$ do{
  $it.act$  } $endif$ 
}$

end

>>

params(items)::=<< $items:{ $it$ };separator=","$ >>

compound(name, components, connectors, exportNames, documentation, priorities)::=<<


$if(documentation)$
 /* $documentation$ */ $endif$

compound type $name$

$components:{
	component $it.type$ $it.name$ }$

$connectors:{ 
	$it.comment$
	connector $it.type$ $it.name$ ( $params(items=it.params)$ ) }$

$exportNames:{ 
	export port $it.names:{ p | $p.name$.exp };separator=","$ as $it.exportName$ }$
	
$priorities:{ 
	priority $it.name$ 		$it.low$ < $it.high$}$

end

>>


footer( rootComponent )::=<<

component $rootComponent$ Root

end
>>